syntax = "proto3";

package markets;

message MarketsSummary {
	uint64 block = 1;
	uint64 total_markets = 2;
	Price total_markets_capitalization = 3;
	repeated Market markets = 4;
	uint64 generation_time = 5; // time at which this MarketsSummary was generated
};

message Price {
	float eth = 1;
	float usd = 2;
	float btc = 3;
};

enum MarketType {
	YESNO = 0;
	CATEGORICAL = 1;
	SCALAR = 2;
};

message Market {
	string id = 1;
	MarketType market_type = 2;
	string name = 3;
	uint32 comment_count = 4;
	Price market_capitalization = 5;
	uint64 end_date = 6; // unix timestamp, seconds since epoch
	repeated Prediction predictions = 7;
	string author = 8;
	uint64 creation_time = 9; // unix timestamp, seconds since epoch
	uint64 creation_block = 10;
	string resolution_source = 11;
	string details = 12;
	repeated string tags = 13;
	bool is_featured = 14; // if true, this market is specially featured on our website
	string category = 15;
	uint64 last_trade_time = 16; // time of last executed trade; unix timestamp, seconds since epoch

	map<uint64, LiquidityAtPrice> best_bids = 17; // map key is augur-node OutcomeInfo.id
	map<uint64, LiquidityAtPrice> best_asks = 18; // map key is augur-node OutcomeInfo.id
};

message MarketDetail {
	string market_id = 1;
	Market market_summary = 2;
	MarketInfo market_info = 3;
	repeated RelatedMarket related_markets = 4;
};

message RelatedMarket {
	string market_id = 1;
	repeated RelatedMarketReason reasons = 2; // reasons why this market is related
};

message Prediction {
	string name = 1;
	float percent = 2; // Value between [0, 100] used in yesno and categorical markets
	float value = 3; // Used in scalar markets
	uint64 outcome_id = 4; // OutcomeInfo.id associated with this Prediction. OutcomeInfo and Prediction have a 1-to-1 correspondence.
};

// LiquidityAtPrice represents a single price point in a market outcome's Order book.
// Note that one bid LiquidityAtPrice may represent an aggregation of N Orders.
message LiquidityAtPrice {
	float price = 1;
	float amount = 2; // ie. quantity of shares in the order book at this price
}

message MarketsSnapshot {
  MarketsSummary markets_summary = 1;
  repeated MarketInfo market_infos = 2;
};

message MarketInfo {
        string id = 1;
        string universe = 2;
        string market_type = 3;
        uint32 num_outcomes = 4;
        string min_price = 5;
        string max_price = 6;
        string cumulative_scale = 7;
        string author = 8;
        uint64 creation_time = 9;
        uint64 creation_block = 10;
        string creation_fee = 11;
        string settlement_fee = 12;
        string reporting_fee_rate = 13;
        string market_creator_fee_rate = 14;
        string market_creator_fees_balance = 15;
        string market_creator_mailbox = 16;
        string market_creator_mailbox_owner = 17;
        string initial_report_size = 18;
        string category = 19;
        repeated string tags = 20;
        string volume = 21;
        string outstanding_shares = 22;
        string fee_window = 23;
        uint64 end_time = 24;
        uint64 finalization_block_number = 25;
        uint64 finalization_time = 26;
        ReportingState reporting_state = 27;
        bool forking = 28;
        bool needs_migration = 29;
        string description = 30;
        string details = 31;
        string scalar_denomination = 32;
        string designated_reporter = 33;
        string designated_report_stake = 34;
        string resolution_source = 35;
        string num_ticks = 36;
        string tick_size = 37;
        NormalizedPayout consensus = 38;
        repeated OutcomeInfo outcomes = 39;
};

message NormalizedPayout {
        bool is_invalid = 1;
        repeated string payout = 2;
};

message OutcomeInfo {
        uint64 id = 1;
        string volume = 2;
        string price = 3;
        string description = 4;
};

//******************************************************
// BEGIN - all enums
// WARNING - proto3 eliminated "optional" keyword such that all simple types (including enums) are initialized to an empty/zero value for new protobuf objects. This means that enums are initialized to 0 eg. in JavaScript "new Foo()" and golang's "Foo{}". ---> our convention is that all enums must start with `MY_TYPE_UNDEFINED = 0` to allow us to check if an enum was explicitly set. For some enums this won't matter, but for others it is essential to know if an enum was set by client or not. All enums should do this for consistency. (MY_TYPE_ prefix is required because enum values must be unique within their protobuf package.)
//******************************************************

enum RelatedMarketReason {
	RELATED_MARKET_REASON_UNDEFINED = 0;
	CATCH_ALL = 1; // catch-all for markets which are related, but not for a specific reason
	SAME_AUTHOR = 2; // related because this market wa created by same author
}

enum ReportingState {
	// WARNING - ReportingState doesn't start with 'UNDEFINED = 0' because we added this convention after ReportingState, and we don't want to make a backwards-incompatible field numbering change because we store serialized protobuf messages as part of our data platform.
	PRE_REPORTING = 0;
	DESIGNATED_REPORTING = 1;
	OPEN_REPORTING = 2;
	CROWDSOURCING_DISPUTE = 3;
	AWAITING_NEXT_WINDOW = 4;
	AWAITING_FINALIZATION = 5;
	FINALIZED = 6;
	FORKING = 7;
	AWAITING_NO_REPORT_MIGRATION = 8;
	AWAITING_FORK_MIGRATION = 9;
};

//******************************************************
// END - all enums
//******************************************************
